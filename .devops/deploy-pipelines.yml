parameters:
  - name: 'ENV'
    displayName: 'Environment to deploy'
    type: string
    values:
      - dev
      - uat
      - prod
  - name: 'APP_NAME'
    displayName: 'Application to deploy'
    type: string
    values:
      - status
      - emd-message-core
      - mil-papos
  - name: 'POSTMAN_TESTS'
    displayName: 'Postman tests'
    type: boolean
    default: false

variables:
  ${{ if eq(parameters.ENV, 'uat') }}:
    kubernetesServiceConnection: '$(UAT_KUBERNETES_SERVICE_CONN)'
    selfHostedAgentPool: '$(UAT_AGENT_POOL)'

  ${{ if eq(parameters.ENV, 'prod') }}:
    kubernetesServiceConnection: '$(PROD_KUBERNETES_SERVICE_CONN)'
    selfHostedAgentPool: '$(PROD_AGENT_POOL)'

  ${{ if eq(parameters.ENV, 'dev') }}:
    kubernetesServiceConnection: '$(DEV_KUBERNETES_SERVICE_CONN)'
    selfHostedAgentPool: '$(DEV_AGENT_POOL)'

resources:
  repositories:
    - repository: templates
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v6.8.0
      endpoint: 'io-azure-devops-github-ro'

pool:
  name: $(selfHostedAgentPool)

name: "Deploy ${{ parameters.APP_NAME }} on ${{ parameters.ENV }} - $(Date:yyyyMMdd).$(Rev:r)"

stages:
  - template: templates/helm-microservice-chart-deploy-tree/template.yaml@templates
    parameters:
      ENV: ${{ parameters.ENV }}
      KUBERNETES_SERVICE_CONN: ${{ variables.kubernetesServiceConnection }}
      APP_NAME: ${{ parameters.APP_NAME }}
      CHART_PATH: "helm/${{parameters.ENV}}/${{parameters.APP_NAME}}"
      VALUE_FILE: "helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml"

  - stage: postman_tests
    displayName: Run Postman Tests
    dependsOn: [helm_deploy]
    condition: and(succeeded(), eq(${{ parameters.POSTMAN_TESTS }}, true))
    jobs:
      - job: run_postman_tests_job
        displayName: Run Postman Tests
        steps:
        - checkout: self
        - task: Bash@3
          displayName: 'Set variables'
          name: varsPostman
          inputs:
            targetType: 'inline'
            script: |
              echo "##vso[task.setvariable variable=dir;isOutput=true]$(yq '.postman-test.dir' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
              echo "##vso[task.setvariable variable=collectionName;isOutput=true]$(yq '.postman-test.collectionName' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
              echo "##vso[task.setvariable variable=envVariables;isOutput=true]$(yq '.postman-test.envVariables' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
        - task: UseNode@1
          inputs:
            version: '20.x'
        - script: |
              git clone https://github.com/pagopa/${{parameters.APP_NAME}}.git
              cd $(varsPostman.dir)
              npm install -g newman
              newman run $(varsPostman.collectionName) -e $(varsPostman.envVariables)
