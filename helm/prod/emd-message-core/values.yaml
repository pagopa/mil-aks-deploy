microservice-chart:
  namespace: "mil"
  nameOverride: ""
  fullnameOverride: ""
#
# Deploy
#
  deployment:
    create: true
    forceRedeploy: true

  image:
    repository: ghcr.io/pagopa/emd-message-core
    tag: v1.2.1@sha256:33ab5019ed425a067ec3231f6b2a5103d899a06114f913fc6f401cb0292489b2
    pullPolicy: Always

  envSecret:
    MONGODB_URI: mongodb-connection-string
    MY_KV_SECRET: cstar-p-weu-prod01-aks-apiserver-url
    KAFKA_MESSAGE_CORE_OUT_SASL_JAAS_CONFIG: evh-emd-courtesy-message-emd-courtesy-message-producer-jaas-config-emd
    APPLICATIONINSIGHTS_CONNECTION_STRING: appinsights-instrumentation-key

  envConfig:
    MONGODB_DBNAME: mil
    APPLICATIONINSIGHTS_ROLE_NAME: "emdmessagecore"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "INFO"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    APPLICATIONINSIGHTS_SAMPLING_ENABLED: "false"
    APPLICATIONINSIGHTS_SAMPLING_PERCENTAGE: "100"
    JAVA_TOOL_OPTIONS: >-
      -XX:InitialRAMPercentage=75.0
      -XX:MaxRAMPercentage=85.0
      -XX:+UseG1GC
      -XX:+UseContainerSupport
      -Djava.security.egd=file:/dev/./urandom
      -Djava.util.concurrent.ForkJoinPool.common.parallelism=7
      -Dio.netty.eventLoopThreads=100
      -javaagent:/app/applicationinsights-agent.jar
      -Dapplicationinsights.configuration.file=/mnt/file-config-external/appinsights-config/applicationinsights.json
  externalConfigMapValues:
    mil-common-poc:
      TZ: TZ
    rest-client:
      EMD_CITIZEN: emd-citizen-baseurl
      EMD_TPP: emd-tpp-baseurl
    emd-eventhub:
      KAFKA_BROKER: kafka_broker
      KAFKA_ERRORS_BROKER: kafka_broker
      KAFKA_TOPIC_MESSAGE_CORE: emd_courtesy_message_topic

  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 35
    failureThreshold: 15
    periodSeconds: 10

#
# Network
#
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080

  ingress:
    create: true
    host: "mil.weu.internal.cstar.pagopa.it"
    path: /emdmessagecore(/|$)(.*)
    rewriteTarget: /$2
    servicePort: 8080
    # proxyBodySize: 2m
    annotations: {
      nginx.ingress.kubernetes.io/satisfy: "any"
    }

  serviceAccount:
    name: mil-poc-workload-identity

  azure:
    workloadIdentityClientId: c75ec56f-519a-441d-bd81-42769baa9006

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10000
    runAsGroup: 10000

  resources:
    requests:
      memory: "768Mi"
      cpu: "150m"
    limits:
      memory: "1536Mi"
      cpu: "600m"

  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 2
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "60"

  keyvault:
    name: "cstar-p-weu-mil-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"

  tmpVolumeMount:
    create: true
    mounts:
      - name: tmp
        mountPath: /tmp
      - name: logs
        mountPath: /app/logs

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}

  externalConfigMapFiles:
    create: true
    configMaps:
      - name: appinsights-config
        key: applicationinsights.json
